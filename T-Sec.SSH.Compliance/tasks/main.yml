---
# ------------------------------------------------------------------------
# Telekom Security - Compliance Automation
# SSH (3.04)
# Tasks
# ------------------------------------------------------------------------

# Read variables for detected OS from '/vars/<linux-os>.yml' files
- name: read variables for detected os
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "{{ ansible_os_family }}.yml"
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
      errors: "ignore"

# Check settings if new user should be configured.
- name: end playbook if user settings are wrong
  fail:
    msg: "ERROR: Miss one or more variables for user settings! Please correct!"
  when: ( config_new_user and not ansible_check_mode ) and
        ( user_name|d("")|length > 0 or password|d("")|length > 0 or public_key_file|d("")|length > 0)

# Generates a user with root rights and ssh access with public-key.
- name: configure a default user with root rights
  user:
    name: "{{ user_name }}"
    shell: /bin/bash
    password: "{{ password|password_hash('sha512') }}"
    createhome: yes
    groups: "{{ group_ssh }},{{ group_sudo }}"
    append: yes
  when: config_new_user and not ansible_check_mode

- name: set authorized key from file for new user
  authorized_key:
    user: "{{ user_name }}"
    state: present
    exclusive: true
    key: "{{ lookup('file', public_key_file) }}"
  when: config_new_user

# 01 ssh requirements
- name: "Include Variables"
  include_vars: vars_ssh(01)ssh-requirements.yml

- name: "Import Tasks"
  import_tasks: hardening_ssh(01)ssh-requirements.yml
